<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.wung.mybatis.dao.UserDao">
    <!--
        select
    -->
    <select id="findById" resultType="User" parameterType="java.lang.Integer">
        select * from t_user where id = #{id}
    </select>
    <!--mybatis 的 mapper 接口不支持重载，所以每个方法都必须有唯一的 id-->
    <!--foreach 用法：
        参数是 List，则 collection 为 list；
        参数是 Array，则 collection 为 array;
        index 代表下标，item 代表每次迭代的对象
    -->
    <select id="findByIds" parameterType="java.util.List" resultType="User">
        select * from t_user where id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
    </select>
    <select id="findByIds2" parameterType="java.util.Arrays" resultType="User">
        select * from t_user where id in
        <foreach collection="array" index="index" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
    </select>
    <!-- 多参数时，如果不使用 @param 指定参数名，mapper 里可以用 #{0} 和 #{param1} 代替 -->
    <select id="findByNameAndAge" resultType="User">
        select * from t_user where login_name = #{0} and age = #{1}
    </select>
    <select id="findByNameAndAge2" resultType="User">
        select * from t_user where login_name = #{param1} and age = #{param2}
    </select>
    <select id="findByNameAndAge3" resultType="User">
        select * from t_user where login_name = #{loginName} and age = #{age}
    </select>
    <select id="findByNameAndAges" resultType="User">
        select * from t_user
        where login_name = #{name}
        and age in
        <foreach collection="ages" index="index" item="age" open="(" separator="," close=")">
            #{age}
        </foreach>
    </select>
    <select id="findAllUsers" resultType="User">
        SELECT * FROM t_user
    </select>


    <!--
        insert
    -->
    <!--会把自增的主键的值赋给参数 user 对象的 id 属性-->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user(login_name, age)
        VALUES (#{loginName}, #{age})
    </insert>
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO t_user(login_name, age)
        VALUES
        <foreach collection="list" index="index" item="user" separator=",">
            (#{user.loginName}, #{user.age})
        </foreach>
    </insert>

    <!--
        update
    -->
    <!--会返回更新的条数-->
    <update id="update" parameterType="User">
        update t_user
        set
        <if test="loginName != null" >
            login_name = #{loginName},
        </if>
        age = #{age}
        WHERE id = #{id}
    </update>

    <!--
        delete
    -->
    <!--会返回更新的条数-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM t_user
        WHERE id = #{id}
    </delete>

</mapper>
